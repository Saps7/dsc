{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sapta\\\\Documents\\\\ReactProjects\\\\dsc-firebase-master\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport App from \"next/app\";\nimport firebaseConfig from \"../src/config/firebaseConfig\";\nimport { UserContext } from \"../src/contexts/UserContext\"; //toast\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: user,\n    1: setUser\n  } = useState();\n  return __jsx(React.Fragment, null, __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(UserContext.Provider, {\n    value: {\n      user,\n      setCurrentUser: ({\n        email,\n        uid\n      }) => setUser(_objectSpread(_objectSpread({}, user), {}, {\n        email: email,\n        uid: uid\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }))));\n}\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/sapta/Documents/ReactProjects/dsc-firebase-master/pages/_app.js"],"names":["React","createContext","useState","firebase","App","firebaseConfig","UserContext","ToastContainer","apps","length","initializeApp","MyApp","Component","pageProps","user","setUser","setCurrentUser","email","uid","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,SAASC,WAAT,QAA4B,6BAA5B,C,CAEA;;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,2CAAP;;AAEA,IAAI,CAACJ,QAAQ,CAACK,IAAT,CAAcC,MAAnB,EAA2B;AACzBN,EAAAA,QAAQ,CAACO,aAAT,CAAuBL,cAAvB;AACD;;AAED,SAASM,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,EAAhC;AACA,SACE,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLY,MAAAA,IADK;AAELE,MAAAA,cAAc,EAAE,CAAC;AAACC,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAD,KAAkBH,OAAO,iCAAMD,IAAN;AAAYG,QAAAA,KAAK,EAACA,KAAlB;AAAyBC,QAAAA,GAAG,EAACA;AAA7B;AAFpC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,SAAD,eAAeL,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,CAFF,CADF;AAaD;;AAEDF,KAAK,CAACQ,eAAN,GAAwB,MAAOC,UAAP,IAAsB;AAC5C;AACA,QAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACe,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,2BAAYC,QAAZ;AACD,CALD;;AAOA,eAAeV,KAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport App from \"next/app\";\n\nimport firebaseConfig from \"../src/config/firebaseConfig\";\n\nimport { UserContext } from \"../src/contexts/UserContext\";\n\n//toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction MyApp({ Component, pageProps }) {\n  const [user, setUser] = useState();\n  return (\n    <>\n      <ToastContainer />\n      <UserContext.Provider\n        value={{\n          user,\n          setCurrentUser: ({email, uid}) => setUser({ ...user, email:email, uid:uid }),\n        }}\n      >\n        <Component {...pageProps} />\n      </UserContext.Provider>\n    </>\n  );\n}\n\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n\n  return { ...appProps };\n};\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}