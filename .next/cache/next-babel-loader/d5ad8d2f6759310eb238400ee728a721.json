{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sapta\\\\Documents\\\\ReactProjects\\\\dsc-firebase-master\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createContext, useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport firebaseConfig from \"../src/config/firebaseConfig\";\nimport { UserContext } from \"../src/contexts/UserContext\"; //toast\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Config);\n}\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: user,\n    1: setUser\n  } = useState({});\n  return __jsx(React.Fragment, null, __jsx(UserContext.Provider, {\n    value: (user, setUser),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/sapta/Documents/ReactProjects/dsc-firebase-master/pages/_app.js"],"names":["React","createContext","useState","firebase","firebaseConfig","UserContext","ToastContainer","apps","length","initializeApp","Config","MyApp","Component","pageProps","user","setUser","getInitialProps","appContext","appProps","App"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,SAASC,WAAT,QAA4B,6BAA5B,C,CAEA;;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,2CAAP;;AAEA,IAAI,CAACH,QAAQ,CAACI,IAAT,CAAcC,MAAnB,EAA2B;AACzBL,EAAAA,QAAQ,CAACM,aAAT,CAAuBC,MAAvB;AACD;;AAID,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAA,OAAEC,IAAF;AAAA,OAAQC;AAAR,MAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,SACE,4BACC,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,GAAEY,IAAI,EAAEC,OAAR,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADF;AAOD,C,CAED;AACA;AACA;AACA;AACA;;;AACAJ,KAAK,CAACK,eAAN,GAAwB,MAAOC,UAAP,IAAsB;AAC5C;AACA,QAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACH,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,2BAAYC,QAAZ;AACD,CALD;;AAOA,eAAeP,KAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\n\nimport firebaseConfig from \"../src/config/firebaseConfig\";\n\nimport { UserContext } from \"../src/contexts/UserContext\";\n\n//toast\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Config);\n}\n\n\n\nfunction MyApp({ Component, pageProps }) {\n  const [ user, setUser ] = useState({});\n  return(\n    <>\n     <UserContext.Provider value={user, setUser}>\n\n     </UserContext.Provider>\n    </>\n  )\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n\n  return { ...appProps }\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}